// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.5
//   protoc               v5.28.3
// source: user/profile.proto

/* eslint-disable */
import type { LocationInfo } from "../common/base";
import type { DateType, Gender, UserStatus } from "../common/enums";

/** Education level */
export enum EducationLevel {
  EDUCATION_LEVEL_UNSPECIFIED = "EDUCATION_LEVEL_UNSPECIFIED",
  EDUCATION_LEVEL_HIGH_SCHOOL = "EDUCATION_LEVEL_HIGH_SCHOOL",
  EDUCATION_LEVEL_BACHELORS = "EDUCATION_LEVEL_BACHELORS",
  EDUCATION_LEVEL_MASTERS = "EDUCATION_LEVEL_MASTERS",
  EDUCATION_LEVEL_PHD = "EDUCATION_LEVEL_PHD",
  EDUCATION_LEVEL_PROFESSIONAL = "EDUCATION_LEVEL_PROFESSIONAL",
}

/** Religion */
export enum Religion {
  RELIGION_UNSPECIFIED = "RELIGION_UNSPECIFIED",
  RELIGION_CHRISTIANITY = "RELIGION_CHRISTIANITY",
  RELIGION_ISLAM = "RELIGION_ISLAM",
  RELIGION_HINDUISM = "RELIGION_HINDUISM",
  RELIGION_BUDDHISM = "RELIGION_BUDDHISM",
  RELIGION_JUDAISM = "RELIGION_JUDAISM",
  RELIGION_SIKHISM = "RELIGION_SIKHISM",
  RELIGION_OTHER = "RELIGION_OTHER",
  RELIGION_ATHEIST = "RELIGION_ATHEIST",
  RELIGION_AGNOSTIC = "RELIGION_AGNOSTIC",
}

/** Smoking preference */
export enum SmokingPreference {
  SMOKING_PREFERENCE_UNSPECIFIED = "SMOKING_PREFERENCE_UNSPECIFIED",
  SMOKING_PREFERENCE_NEVER = "SMOKING_PREFERENCE_NEVER",
  SMOKING_PREFERENCE_SOCIALLY = "SMOKING_PREFERENCE_SOCIALLY",
  SMOKING_PREFERENCE_REGULARLY = "SMOKING_PREFERENCE_REGULARLY",
  SMOKING_PREFERENCE_TRYING_TO_QUIT = "SMOKING_PREFERENCE_TRYING_TO_QUIT",
}

/** Drinking preference */
export enum DrinkingPreference {
  DRINKING_PREFERENCE_UNSPECIFIED = "DRINKING_PREFERENCE_UNSPECIFIED",
  DRINKING_PREFERENCE_NEVER = "DRINKING_PREFERENCE_NEVER",
  DRINKING_PREFERENCE_SOCIALLY = "DRINKING_PREFERENCE_SOCIALLY",
  DRINKING_PREFERENCE_REGULARLY = "DRINKING_PREFERENCE_REGULARLY",
  DRINKING_PREFERENCE_OCCASIONALLY = "DRINKING_PREFERENCE_OCCASIONALLY",
}

/** User profile */
export interface UserProfile {
  id: number;
  email: string;
  firstName: string;
  lastName: string;
  dateOfBirth: string;
  gender: Gender;
  phoneNumber: string;
  bio: string;
  interests: string[];
  occupation: string;
  educationLevel: EducationLevel;
  religion: Religion;
  smokingPreference: SmokingPreference;
  drinkingPreference: DrinkingPreference;
  heightCm: number;
  profileImages: string[];
  location?: LocationInfo | undefined;
  isVerified: boolean;
  profileCompletionPercentage: number;
  status: UserStatus;
  createdAt: string;
  updatedAt: string;
}

/** Partner preferences */
export interface PartnerPreferences {
  userId: number;
  ageRange?: AgeRange | undefined;
  preferredGenders: Gender[];
  maxDistanceKm: number;
  heightRange?: HeightRange | undefined;
  educationLevels: EducationLevel[];
  religions: Religion[];
  smokingPreferences: SmokingPreference[];
  drinkingPreferences: DrinkingPreference[];
  interests: string[];
  dealBreakers: string[];
  importanceScore: number;
  createdAt: string;
  updatedAt: string;
}

/** Age range */
export interface AgeRange {
  minAge: number;
  maxAge: number;
}

/** Height range */
export interface HeightRange {
  minHeightCm: number;
  maxHeightCm: number;
}

/** User availability */
export interface UserAvailability {
  id: number;
  userId: number;
  dateType: DateType;
  startTime: string;
  endTime: string;
  timezone: string;
  isRecurring: boolean;
  daysOfWeek: string[];
  notes: string;
  isAvailable: boolean;
  createdAt: string;
  updatedAt: string;
}

/** Request messages */
export interface GetUserProfileRequest {
  userId: number;
}

export interface UpdateUserProfileRequest {
  userId: number;
  firstName: string;
  lastName: string;
  bio: string;
  interests: string[];
  occupation: string;
  educationLevel: EducationLevel;
  religion: Religion;
  smokingPreference: SmokingPreference;
  drinkingPreference: DrinkingPreference;
  heightCm: number;
  location?: LocationInfo | undefined;
}

export interface UpdatePartnerPreferencesRequest {
  userId: number;
  ageRange?: AgeRange | undefined;
  preferredGenders: Gender[];
  maxDistanceKm: number;
  heightRange?: HeightRange | undefined;
  educationLevels: EducationLevel[];
  religions: Religion[];
  smokingPreferences: SmokingPreference[];
  drinkingPreferences: DrinkingPreference[];
  interests: string[];
  dealBreakers: string[];
  importanceScore: number;
}

export interface UploadProfileImageRequest {
  userId: number;
  imageData: Uint8Array;
  imageType: string;
  isPrimary: boolean;
}

/** Response messages */
export interface UserProfileResponse {
  success: boolean;
  data?: UserProfile | undefined;
  message: string;
}

export interface PartnerPreferencesResponse {
  success: boolean;
  data?: PartnerPreferences | undefined;
  message: string;
}

export interface ProfileImageResponse {
  success: boolean;
  imageUrl: string;
  message: string;
}
