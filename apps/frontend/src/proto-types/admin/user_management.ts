// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.5
//   protoc               v5.28.3
// source: admin/user_management.proto

/* eslint-disable */
import type { LocationInfo, PaginationRequest, PaginationResponse } from "../common/base";
import type { Gender, UserStatus } from "../common/enums";

/** Admin permission levels */
export enum AdminPermissionLevel {
  ADMIN_PERMISSION_LEVEL_UNSPECIFIED = "ADMIN_PERMISSION_LEVEL_UNSPECIFIED",
  ADMIN_PERMISSION_LEVEL_READ_ONLY = "ADMIN_PERMISSION_LEVEL_READ_ONLY",
  ADMIN_PERMISSION_LEVEL_MODERATOR = "ADMIN_PERMISSION_LEVEL_MODERATOR",
  ADMIN_PERMISSION_LEVEL_ADMIN = "ADMIN_PERMISSION_LEVEL_ADMIN",
  ADMIN_PERMISSION_LEVEL_SUPER_ADMIN = "ADMIN_PERMISSION_LEVEL_SUPER_ADMIN",
}

/** User trust score levels */
export enum UserTrustScoreLevel {
  USER_TRUST_SCORE_LEVEL_UNSPECIFIED = "USER_TRUST_SCORE_LEVEL_UNSPECIFIED",
  USER_TRUST_SCORE_LEVEL_LOW = "USER_TRUST_SCORE_LEVEL_LOW",
  USER_TRUST_SCORE_LEVEL_MEDIUM = "USER_TRUST_SCORE_LEVEL_MEDIUM",
  USER_TRUST_SCORE_LEVEL_HIGH = "USER_TRUST_SCORE_LEVEL_HIGH",
  USER_TRUST_SCORE_LEVEL_VERIFIED = "USER_TRUST_SCORE_LEVEL_VERIFIED",
}

/** User verification status */
export enum UserVerificationStatus {
  USER_VERIFICATION_STATUS_UNSPECIFIED = "USER_VERIFICATION_STATUS_UNSPECIFIED",
  USER_VERIFICATION_STATUS_PENDING = "USER_VERIFICATION_STATUS_PENDING",
  USER_VERIFICATION_STATUS_VERIFIED = "USER_VERIFICATION_STATUS_VERIFIED",
  USER_VERIFICATION_STATUS_REJECTED = "USER_VERIFICATION_STATUS_REJECTED",
}

/** Admin user information */
export interface AdminUser {
  id: number;
  email: string;
  firstName: string;
  lastName: string;
  permissionLevel: AdminPermissionLevel;
  isActive: boolean;
  lastLogin: string;
  createdAt: string;
  updatedAt: string;
}

/** User detail for admin view */
export interface AdminUserDetail {
  id: number;
  email: string;
  firstName: string;
  lastName: string;
  gender: Gender;
  dateOfBirth: string;
  phoneNumber: string;
  status: UserStatus;
  verificationStatus: UserVerificationStatus;
  trustScore?: UserTrustScore | undefined;
  profileCompletionPercentage: string;
  totalDates: number;
  successfulDates: number;
  cancelledDates: number;
  totalSpent: number;
  lastActive: string;
  createdAt: string;
  updatedAt: string;
  profileImages: string[];
  bio: string;
  location?: LocationInfo | undefined;
}

/** User trust score */
export interface UserTrustScore {
  score: number;
  level: UserTrustScoreLevel;
  lastUpdated: string;
  factors: TrustScoreFactor[];
}

/** Trust score factor */
export interface TrustScoreFactor {
  factorName: string;
  score: number;
  description: string;
  weight: number;
}

/** User statistics */
export interface UserStats {
  totalUsers: number;
  activeUsers: number;
  verifiedUsers: number;
  suspendedUsers: number;
  newSignupsToday: number;
  newSignupsThisWeek: number;
  newSignupsThisMonth: number;
  demographics: UserDemographics[];
  engagementStats: UserEngagementStats[];
}

/** User demographics */
export interface UserDemographics {
  /** "age_group", "gender", "location" */
  category: string;
  value: string;
  count: number;
  percentage: number;
}

/** User engagement statistics */
export interface UserEngagementStats {
  metric: string;
  value: number;
  period: string;
}

/** Request messages */
export interface GetUsersRequest {
  status: UserStatus;
  verificationStatus: UserVerificationStatus;
  trustScoreLevel: UserTrustScoreLevel;
  searchQuery: string;
  startDate: string;
  endDate: string;
  pagination?: PaginationRequest | undefined;
}

export interface GetUserDetailRequest {
  userId: number;
}

export interface UpdateUserStatusRequest {
  userId: number;
  status: UserStatus;
  reason: string;
}

export interface UpdateUserTrustScoreRequest {
  userId: number;
  score: number;
  reason: string;
}

export interface VerifyUserRequest {
  userId: number;
  verificationStatus: UserVerificationStatus;
  notes: string;
}

export interface GetUserStatsRequest {
  startDate: string;
  endDate: string;
  includeDemographics: boolean;
  includeEngagement: boolean;
}

/** Response messages */
export interface AdminUserListResponse {
  success: boolean;
  users: AdminUserDetail[];
  pagination?: PaginationResponse | undefined;
  message: string;
}

export interface AdminUserDetailResponse {
  success: boolean;
  data?: AdminUserDetail | undefined;
  message: string;
}

export interface UserStatsResponse {
  success: boolean;
  data?: UserStats | undefined;
  message: string;
}

export interface UserActionResponse {
  success: boolean;
  message: string;
  updatedUser?: AdminUserDetail | undefined;
}
