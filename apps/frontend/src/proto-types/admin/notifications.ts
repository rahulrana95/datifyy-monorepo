// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.5
//   protoc               v5.28.3
// source: admin/notifications.proto

/* eslint-disable */
import type { PaginationRequest, PaginationResponse } from "../common/base";

/** Notification channels */
export enum NotificationChannel {
  NOTIFICATION_CHANNEL_UNSPECIFIED = "NOTIFICATION_CHANNEL_UNSPECIFIED",
  NOTIFICATION_CHANNEL_EMAIL = "NOTIFICATION_CHANNEL_EMAIL",
  NOTIFICATION_CHANNEL_SLACK = "NOTIFICATION_CHANNEL_SLACK",
  NOTIFICATION_CHANNEL_SMS = "NOTIFICATION_CHANNEL_SMS",
  NOTIFICATION_CHANNEL_IN_APP = "NOTIFICATION_CHANNEL_IN_APP",
  NOTIFICATION_CHANNEL_WEBHOOK = "NOTIFICATION_CHANNEL_WEBHOOK",
  NOTIFICATION_CHANNEL_PUSH = "NOTIFICATION_CHANNEL_PUSH",
}

/** Notification priority */
export enum NotificationPriority {
  NOTIFICATION_PRIORITY_UNSPECIFIED = "NOTIFICATION_PRIORITY_UNSPECIFIED",
  NOTIFICATION_PRIORITY_LOW = "NOTIFICATION_PRIORITY_LOW",
  NOTIFICATION_PRIORITY_NORMAL = "NOTIFICATION_PRIORITY_NORMAL",
  NOTIFICATION_PRIORITY_HIGH = "NOTIFICATION_PRIORITY_HIGH",
  NOTIFICATION_PRIORITY_URGENT = "NOTIFICATION_PRIORITY_URGENT",
  NOTIFICATION_PRIORITY_CRITICAL = "NOTIFICATION_PRIORITY_CRITICAL",
}

/** Notification status */
export enum NotificationStatus {
  NOTIFICATION_STATUS_UNSPECIFIED = "NOTIFICATION_STATUS_UNSPECIFIED",
  NOTIFICATION_STATUS_PENDING = "NOTIFICATION_STATUS_PENDING",
  NOTIFICATION_STATUS_SENT = "NOTIFICATION_STATUS_SENT",
  NOTIFICATION_STATUS_DELIVERED = "NOTIFICATION_STATUS_DELIVERED",
  NOTIFICATION_STATUS_FAILED = "NOTIFICATION_STATUS_FAILED",
  NOTIFICATION_STATUS_BOUNCED = "NOTIFICATION_STATUS_BOUNCED",
  NOTIFICATION_STATUS_OPENED = "NOTIFICATION_STATUS_OPENED",
  NOTIFICATION_STATUS_CLICKED = "NOTIFICATION_STATUS_CLICKED",
  NOTIFICATION_STATUS_UNSUBSCRIBED = "NOTIFICATION_STATUS_UNSUBSCRIBED",
}

/** Notification trigger events */
export enum NotificationTriggerEvent {
  NOTIFICATION_TRIGGER_EVENT_UNSPECIFIED = "NOTIFICATION_TRIGGER_EVENT_UNSPECIFIED",
  /** NOTIFICATION_TRIGGER_EVENT_NEW_USER_SIGNUP - User Events */
  NOTIFICATION_TRIGGER_EVENT_NEW_USER_SIGNUP = "NOTIFICATION_TRIGGER_EVENT_NEW_USER_SIGNUP",
  NOTIFICATION_TRIGGER_EVENT_USER_PROFILE_COMPLETED = "NOTIFICATION_TRIGGER_EVENT_USER_PROFILE_COMPLETED",
  NOTIFICATION_TRIGGER_EVENT_USER_EMAIL_VERIFIED = "NOTIFICATION_TRIGGER_EVENT_USER_EMAIL_VERIFIED",
  NOTIFICATION_TRIGGER_EVENT_USER_PHONE_VERIFIED = "NOTIFICATION_TRIGGER_EVENT_USER_PHONE_VERIFIED",
  NOTIFICATION_TRIGGER_EVENT_USER_DELETED_ACCOUNT = "NOTIFICATION_TRIGGER_EVENT_USER_DELETED_ACCOUNT",
  NOTIFICATION_TRIGGER_EVENT_USER_REPORTED = "NOTIFICATION_TRIGGER_EVENT_USER_REPORTED",
  /** NOTIFICATION_TRIGGER_EVENT_DATE_CURATED - Date Events */
  NOTIFICATION_TRIGGER_EVENT_DATE_CURATED = "NOTIFICATION_TRIGGER_EVENT_DATE_CURATED",
  NOTIFICATION_TRIGGER_EVENT_DATE_CONFIRMED = "NOTIFICATION_TRIGGER_EVENT_DATE_CONFIRMED",
  NOTIFICATION_TRIGGER_EVENT_DATE_CANCELLED = "NOTIFICATION_TRIGGER_EVENT_DATE_CANCELLED",
  NOTIFICATION_TRIGGER_EVENT_DATE_CANCELLED_LAST_MINUTE = "NOTIFICATION_TRIGGER_EVENT_DATE_CANCELLED_LAST_MINUTE",
  NOTIFICATION_TRIGGER_EVENT_DATE_COMPLETED = "NOTIFICATION_TRIGGER_EVENT_DATE_COMPLETED",
  NOTIFICATION_TRIGGER_EVENT_DATE_NO_SHOW = "NOTIFICATION_TRIGGER_EVENT_DATE_NO_SHOW",
  NOTIFICATION_TRIGGER_EVENT_DATE_FEEDBACK_SUBMITTED = "NOTIFICATION_TRIGGER_EVENT_DATE_FEEDBACK_SUBMITTED",
  NOTIFICATION_TRIGGER_EVENT_DATE_SAFETY_CONCERN = "NOTIFICATION_TRIGGER_EVENT_DATE_SAFETY_CONCERN",
  /** NOTIFICATION_TRIGGER_EVENT_PAYMENT_SUCCESSFUL - Payment Events */
  NOTIFICATION_TRIGGER_EVENT_PAYMENT_SUCCESSFUL = "NOTIFICATION_TRIGGER_EVENT_PAYMENT_SUCCESSFUL",
  NOTIFICATION_TRIGGER_EVENT_PAYMENT_FAILED = "NOTIFICATION_TRIGGER_EVENT_PAYMENT_FAILED",
  NOTIFICATION_TRIGGER_EVENT_REFUND_REQUESTED = "NOTIFICATION_TRIGGER_EVENT_REFUND_REQUESTED",
  NOTIFICATION_TRIGGER_EVENT_REFUND_PROCESSED = "NOTIFICATION_TRIGGER_EVENT_REFUND_PROCESSED",
  NOTIFICATION_TRIGGER_EVENT_HIGH_VALUE_TRANSACTION = "NOTIFICATION_TRIGGER_EVENT_HIGH_VALUE_TRANSACTION",
  NOTIFICATION_TRIGGER_EVENT_CHARGEBACK_RECEIVED = "NOTIFICATION_TRIGGER_EVENT_CHARGEBACK_RECEIVED",
  /** NOTIFICATION_TRIGGER_EVENT_SYSTEM_ERROR - System Events */
  NOTIFICATION_TRIGGER_EVENT_SYSTEM_ERROR = "NOTIFICATION_TRIGGER_EVENT_SYSTEM_ERROR",
  NOTIFICATION_TRIGGER_EVENT_DATABASE_SLOW = "NOTIFICATION_TRIGGER_EVENT_DATABASE_SLOW",
  NOTIFICATION_TRIGGER_EVENT_API_RATE_LIMIT_EXCEEDED = "NOTIFICATION_TRIGGER_EVENT_API_RATE_LIMIT_EXCEEDED",
  NOTIFICATION_TRIGGER_EVENT_STORAGE_QUOTA_WARNING = "NOTIFICATION_TRIGGER_EVENT_STORAGE_QUOTA_WARNING",
  NOTIFICATION_TRIGGER_EVENT_EMAIL_DELIVERY_FAILED = "NOTIFICATION_TRIGGER_EVENT_EMAIL_DELIVERY_FAILED",
  /** NOTIFICATION_TRIGGER_EVENT_DAILY_REVENUE_TARGET_MET - Revenue Events */
  NOTIFICATION_TRIGGER_EVENT_DAILY_REVENUE_TARGET_MET = "NOTIFICATION_TRIGGER_EVENT_DAILY_REVENUE_TARGET_MET",
  NOTIFICATION_TRIGGER_EVENT_MONTHLY_REVENUE_TARGET_MET = "NOTIFICATION_TRIGGER_EVENT_MONTHLY_REVENUE_TARGET_MET",
  NOTIFICATION_TRIGGER_EVENT_REVENUE_DROP_DETECTED = "NOTIFICATION_TRIGGER_EVENT_REVENUE_DROP_DETECTED",
  NOTIFICATION_TRIGGER_EVENT_NEW_PAYING_USER = "NOTIFICATION_TRIGGER_EVENT_NEW_PAYING_USER",
  /** NOTIFICATION_TRIGGER_EVENT_LOW_TRUST_SCORE - Trust & Safety Events */
  NOTIFICATION_TRIGGER_EVENT_LOW_TRUST_SCORE = "NOTIFICATION_TRIGGER_EVENT_LOW_TRUST_SCORE",
  NOTIFICATION_TRIGGER_EVENT_MULTIPLE_CANCELLATIONS = "NOTIFICATION_TRIGGER_EVENT_MULTIPLE_CANCELLATIONS",
  NOTIFICATION_TRIGGER_EVENT_SUSPICIOUS_ACTIVITY = "NOTIFICATION_TRIGGER_EVENT_SUSPICIOUS_ACTIVITY",
  NOTIFICATION_TRIGGER_EVENT_FAKE_PROFILE_DETECTED = "NOTIFICATION_TRIGGER_EVENT_FAKE_PROFILE_DETECTED",
  /** NOTIFICATION_TRIGGER_EVENT_ADMIN_LOGIN - Admin Events */
  NOTIFICATION_TRIGGER_EVENT_ADMIN_LOGIN = "NOTIFICATION_TRIGGER_EVENT_ADMIN_LOGIN",
  NOTIFICATION_TRIGGER_EVENT_ADMIN_LOGIN_FAILED = "NOTIFICATION_TRIGGER_EVENT_ADMIN_LOGIN_FAILED",
  NOTIFICATION_TRIGGER_EVENT_ADMIN_PERMISSION_CHANGED = "NOTIFICATION_TRIGGER_EVENT_ADMIN_PERMISSION_CHANGED",
  NOTIFICATION_TRIGGER_EVENT_ADMIN_ACTION_HIGH_RISK = "NOTIFICATION_TRIGGER_EVENT_ADMIN_ACTION_HIGH_RISK",
}

/** Notification frequency */
export enum NotificationFrequency {
  NOTIFICATION_FREQUENCY_UNSPECIFIED = "NOTIFICATION_FREQUENCY_UNSPECIFIED",
  NOTIFICATION_FREQUENCY_IMMEDIATE = "NOTIFICATION_FREQUENCY_IMMEDIATE",
  NOTIFICATION_FREQUENCY_BATCHED_5MIN = "NOTIFICATION_FREQUENCY_BATCHED_5MIN",
  NOTIFICATION_FREQUENCY_BATCHED_15MIN = "NOTIFICATION_FREQUENCY_BATCHED_15MIN",
  NOTIFICATION_FREQUENCY_BATCHED_HOURLY = "NOTIFICATION_FREQUENCY_BATCHED_HOURLY",
  NOTIFICATION_FREQUENCY_DAILY_DIGEST = "NOTIFICATION_FREQUENCY_DAILY_DIGEST",
  NOTIFICATION_FREQUENCY_WEEKLY_DIGEST = "NOTIFICATION_FREQUENCY_WEEKLY_DIGEST",
  NOTIFICATION_FREQUENCY_DISABLED = "NOTIFICATION_FREQUENCY_DISABLED",
}

/** Base notification */
export interface BaseNotification {
  id: string;
  triggerEvent: NotificationTriggerEvent;
  channel: NotificationChannel;
  priority: NotificationPriority;
  title: string;
  message: string;
  metadata?: NotificationMetadata | undefined;
  status: NotificationStatus;
  recipientAdminId: number;
  recipientChannel: string;
  createdAt: string;
  sentAt: string;
  deliveredAt: string;
  failureReason: string;
  retryCount: number;
  maxRetries: number;
}

/** Notification metadata */
export interface NotificationMetadata {
  resourceType: string;
  resourceId: string;
  userId: number;
  userEmail: string;
  userName: string;
  adminId: number;
  amount: number;
  currency: string;
  city: string;
  dateTime: string;
  additionalData: { [key: string]: string };
  templateVariables: { [key: string]: string };
  actionUrl: string;
  actionText: string;
}

export interface NotificationMetadata_AdditionalDataEntry {
  key: string;
  value: string;
}

export interface NotificationMetadata_TemplateVariablesEntry {
  key: string;
  value: string;
}

/** Email template */
export interface EmailTemplate {
  subject: string;
  htmlContent: string;
  textContent: string;
  fromName: string;
  fromEmail: string;
  replyTo: string;
  variables: string[];
}

/** Slack template */
export interface SlackTemplate {
  channel: string;
  message: string;
  iconEmoji: string;
  username: string;
  variables: string[];
}

/** SMS template */
export interface SmsTemplate {
  message: string;
  maxLength: number;
  variables: string[];
}

/** In-app template */
export interface InAppTemplate {
  title: string;
  message: string;
  icon: string;
  actionText: string;
  actionUrl: string;
  category: string;
  variables: string[];
}

/** Notification template */
export interface NotificationTemplate {
  id: string;
  name: string;
  triggerEvent: NotificationTriggerEvent;
  channels: NotificationChannel[];
  isActive: boolean;
  email?: EmailTemplate | undefined;
  slack?: SlackTemplate | undefined;
  sms?: SmsTemplate | undefined;
  inApp?: InAppTemplate | undefined;
  frequency: NotificationFrequency;
  priority: NotificationPriority;
  conditions: NotificationCondition[];
  createdAt: string;
  updatedAt: string;
  createdBy: number;
}

/** Notification condition */
export interface NotificationCondition {
  field: string;
  /** "equals", "not_equals", "greater_than", etc. */
  operator: string;
  value: string;
  /** "AND", "OR" */
  logicalOperator: string;
}

/** Request messages */
export interface CreateNotificationRequest {
  triggerEvent: NotificationTriggerEvent;
  channels: NotificationChannel[];
  priority: NotificationPriority;
  title: string;
  message: string;
  metadata?: NotificationMetadata | undefined;
  recipientAdminIds: number[];
  recipientChannels: string[];
  scheduledAt: string;
  templateId: string;
  templateVariables: { [key: string]: string };
}

export interface CreateNotificationRequest_TemplateVariablesEntry {
  key: string;
  value: string;
}

export interface GetNotificationsRequest {
  channels: NotificationChannel[];
  triggerEvents: NotificationTriggerEvent[];
  statuses: NotificationStatus[];
  priorities: NotificationPriority[];
  startDate: string;
  endDate: string;
  recipientAdminId: number;
  isRead: boolean;
  pagination?: PaginationRequest | undefined;
}

export interface UpdateNotificationRequest {
  notificationId: string;
  status: NotificationStatus;
  retryCount: number;
  failureReason: string;
  deliveredAt: string;
  metadata?: NotificationMetadata | undefined;
}

export interface CreateNotificationTemplateRequest {
  name: string;
  triggerEvent: NotificationTriggerEvent;
  channels: NotificationChannel[];
  priority: NotificationPriority;
  isActive: boolean;
  email?: EmailTemplate | undefined;
  slack?: SlackTemplate | undefined;
  sms?: SmsTemplate | undefined;
  inApp?: InAppTemplate | undefined;
  frequency: NotificationFrequency;
  conditions: NotificationCondition[];
}

export interface UpdateNotificationTemplateRequest {
  templateId: string;
  name: string;
  triggerEvent: NotificationTriggerEvent;
  channels: NotificationChannel[];
  priority: NotificationPriority;
  isActive: boolean;
  email?: EmailTemplate | undefined;
  slack?: SlackTemplate | undefined;
  sms?: SmsTemplate | undefined;
  inApp?: InAppTemplate | undefined;
  frequency: NotificationFrequency;
  conditions: NotificationCondition[];
}

export interface TestNotificationRequest {
  channel: NotificationChannel;
  recipient: string;
  templateId: string;
  templateVariables: { [key: string]: string };
  customMessage: string;
}

export interface TestNotificationRequest_TemplateVariablesEntry {
  key: string;
  value: string;
}

export interface BulkNotificationRequest {
  templateId: string;
  recipients: BulkNotificationRecipient[];
  scheduledAt: string;
  priority: NotificationPriority;
  metadata?: NotificationMetadata | undefined;
}

export interface BulkNotificationRecipient {
  adminId: number;
  channel: string;
  templateVariables: { [key: string]: string };
}

export interface BulkNotificationRecipient_TemplateVariablesEntry {
  key: string;
  value: string;
}

/** Response messages */
export interface NotificationResponse {
  success: boolean;
  data?: BaseNotification | undefined;
  message: string;
}

export interface NotificationsListResponse {
  success: boolean;
  notifications: BaseNotification[];
  pagination?: PaginationResponse | undefined;
  summary?: NotificationsSummary | undefined;
  message: string;
}

export interface NotificationsSummary {
  unreadCount: number;
  criticalCount: number;
  recentActivity: number;
}

export interface NotificationTemplateResponse {
  success: boolean;
  data?: NotificationTemplate | undefined;
  message: string;
}

export interface BulkNotificationResponse {
  success: boolean;
  batchId: string;
  totalRequested: number;
  successful: number;
  failed: number;
  results: BulkNotificationResult[];
  estimatedCost: number;
  message: string;
}

export interface BulkNotificationResult {
  recipient: string;
  notificationId: string;
  success: boolean;
  error: string;
}
